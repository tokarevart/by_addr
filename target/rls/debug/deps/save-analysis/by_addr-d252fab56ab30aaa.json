{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"c:\\coding\\rust\\by_addr","program":"C:\\Users\\tokarevart\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":[],"output":"c:\\coding\\rust\\by_addr\\target\\rls\\debug\\deps\\libby_addr-d252fab56ab30aaa.rmeta"},"prelude":{"crate_id":{"name":"by_addr","disambiguator":[2213094481936840696,7200056199136417817]},"crate_root":"src","external_crates":[{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1200887515805629476,13961537917030225810]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[15643769923203742741,6710670386022819659]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4638356190185725573,9956701283332564042]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10305529552311549478,7028115040337007939]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16759729374301393230,16200657558777663199]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5012778566452678494,15619006666345260856]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[928079405239711693,5808300176156491900]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17662213595906622742,7883254848870460371]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[11010224042080349333,5869322876656859960]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9841419756016054797,11705500928491582809]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[16094210734061045551,13363456872917695715]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15712297895813582696,16912921095979148486]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13654270208565112552,4515538211844771152]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":14,"id":{"name":"by_address","disambiguator":[3062145771107097091,17845205600321243644]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":15,"id":{"name":"test","disambiguator":[7101481625898093092,8982506804460664326]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":16,"id":{"name":"getopts","disambiguator":[10827857061545475663,1009850998090242753]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":17,"id":{"name":"rustc_std_workspace_std","disambiguator":[13967476737728790496,11220969512361181493]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":18,"id":{"name":"unicode_width","disambiguator":[9241935747680248264,11779609257730933172]}},{"file_name":"c:\\coding\\rust\\by_addr\\src\\lib.rs","num":19,"id":{"name":"term","disambiguator":[10368278636618440165,14544562224297059349]}}],"span":{"file_name":"src\\lib.rs","byte_start":0,"byte_end":3536,"line_start":1,"line_end":93,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":48},"span":{"file_name":"src\\lib.rs","byte_start":3064,"byte_end":3073,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":{"file_name":"src\\lib.rs","byte_start":3077,"byte_end":3083,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"name":"ByAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2073},"span":{"file_name":"src\\lib.rs","byte_start":3099,"byte_end":3104,"line_start":77,"line_end":77,"column_start":15,"column_end":20},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src\\lib.rs","byte_start":0,"byte_end":3536,"line_start":1,"line_end":93,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":19}],"decl_id":null,"docs":" Wrapper type for by-address hashing and comparison.  \n This crate is an extension of [`by_address`] crate with the short name of core struct ByAddress\n and the implementation of some From/Into-like traits. This crate DOES depend on libstd,\n unlike original [`by_address`] crate, so it can not be used in [`no_std`] projects.\n The description below was taken mainly from the original crate.","sig":null,"attributes":[{"value":"! Wrapper type for by-address hashing and comparison.  ","span":{"file_name":"src\\lib.rs","byte_start":0,"byte_end":57,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"! This crate is an extension of [`by_address`] crate with the short name of core struct ByAddress","span":{"file_name":"src\\lib.rs","byte_start":58,"byte_end":157,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"! and the implementation of some From/Into-like traits. This crate DOES depend on libstd,","span":{"file_name":"src\\lib.rs","byte_start":158,"byte_end":249,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"! unlike original [`by_address`] crate, so it can not be used in [`no_std`] projects.","span":{"file_name":"src\\lib.rs","byte_start":250,"byte_end":337,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"! The description below was taken mainly from the original crate.","span":{"file_name":"src\\lib.rs","byte_start":338,"byte_end":405,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":406,"byte_end":409,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [ByAddr] can be used to wrap any pointer type (i.e. any type that implements the Deref","span":{"file_name":"src\\lib.rs","byte_start":410,"byte_end":500,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"! trait).  This includes references, raw pointers, smart pointers like `Rc<T>` and `Box<T>`, and","span":{"file_name":"src\\lib.rs","byte_start":501,"byte_end":599,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! specialized pointer-like types such as `Vec<T>` and `String`.","span":{"file_name":"src\\lib.rs","byte_start":600,"byte_end":665,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":666,"byte_end":669,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Comparison, ordering, and hashing of the wrapped pointer will be based on the address of its","span":{"file_name":"src\\lib.rs","byte_start":670,"byte_end":766,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! contents, rather than their value.","span":{"file_name":"src\\lib.rs","byte_start":767,"byte_end":805,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":806,"byte_end":809,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":810,"byte_end":817,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"! use by_addr::ByAddr;","span":{"file_name":"src\\lib.rs","byte_start":818,"byte_end":842,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"! use std::rc::Rc;","span":{"file_name":"src\\lib.rs","byte_start":843,"byte_end":863,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":864,"byte_end":867,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! let rc = Rc::new(5);","span":{"file_name":"src\\lib.rs","byte_start":868,"byte_end":892,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"! let x = ByAddr(rc.clone());","span":{"file_name":"src\\lib.rs","byte_start":893,"byte_end":924,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"! let y = ByAddr(rc.clone());","span":{"file_name":"src\\lib.rs","byte_start":925,"byte_end":956,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":957,"byte_end":960,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! // x and y are two pointers to the same address:","span":{"file_name":"src\\lib.rs","byte_start":961,"byte_end":1013,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"! assert_eq!(x, y);","span":{"file_name":"src\\lib.rs","byte_start":1014,"byte_end":1035,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":1036,"byte_end":1039,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! // Same as let z = 5.into_byaddr(); ","span":{"file_name":"src\\lib.rs","byte_start":1040,"byte_end":1080,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"! //      or ByAddr::from_target(5) (only for ByAddr<T> where T: Sized)","span":{"file_name":"src\\lib.rs","byte_start":1081,"byte_end":1154,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"! let z = ByAddr(Rc::new(5));","span":{"file_name":"src\\lib.rs","byte_start":1155,"byte_end":1186,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":1187,"byte_end":1190,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! // *x and *z have the same value, but not the same address:","span":{"file_name":"src\\lib.rs","byte_start":1191,"byte_end":1254,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"! assert_ne!(x, z);","span":{"file_name":"src\\lib.rs","byte_start":1255,"byte_end":1276,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":1277,"byte_end":1284,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":1285,"byte_end":1288,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! You can use wrapped pointers as keys in hashed or ordered collections, like BTreeMap/BTreeSet","span":{"file_name":"src\\lib.rs","byte_start":1289,"byte_end":1386,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! or HashMap/HashSet, even if the target of the pointer doesn't implement hashing or ordering.","span":{"file_name":"src\\lib.rs","byte_start":1387,"byte_end":1483,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"! This even includes pointers to trait objects, which usually don't implement the Eq trait","span":{"file_name":"src\\lib.rs","byte_start":1484,"byte_end":1576,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"! because it is not object-safe.","span":{"file_name":"src\\lib.rs","byte_start":1577,"byte_end":1611,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":1612,"byte_end":1615,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":1616,"byte_end":1623,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! # use by_addr::ByAddr;","span":{"file_name":"src\\lib.rs","byte_start":1624,"byte_end":1650,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"! # use std::collections::HashSet;","span":{"file_name":"src\\lib.rs","byte_start":1651,"byte_end":1687,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"! #","span":{"file_name":"src\\lib.rs","byte_start":1688,"byte_end":1693,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! /// Call each item in `callbacks`, skipping any duplicate references.","span":{"file_name":"src\\lib.rs","byte_start":1694,"byte_end":1767,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"! fn call_each_once(callbacks: &[&Fn()]) {","span":{"file_name":"src\\lib.rs","byte_start":1768,"byte_end":1812,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"!     let mut seen: HashSet<ByAddr<&Fn()>> = HashSet::new();","span":{"file_name":"src\\lib.rs","byte_start":1813,"byte_end":1875,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"!     for &f in callbacks {","span":{"file_name":"src\\lib.rs","byte_start":1876,"byte_end":1905,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"!         if seen.insert(ByAddr(f)) {","span":{"file_name":"src\\lib.rs","byte_start":1906,"byte_end":1945,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"!             f();","span":{"file_name":"src\\lib.rs","byte_start":1946,"byte_end":1966,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"!         }","span":{"file_name":"src\\lib.rs","byte_start":1967,"byte_end":1980,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"src\\lib.rs","byte_start":1981,"byte_end":1990,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"src\\lib.rs","byte_start":1991,"byte_end":1996,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":1997,"byte_end":2004,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":2005,"byte_end":2008,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! If `T` is a pointer to an unsized type, then comparison and ordering of `ByAddr<T>` compare","span":{"file_name":"src\\lib.rs","byte_start":2009,"byte_end":2104,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"! the entire fat pointer, not just the \"thin\" data address.  This means that two slice pointers","span":{"file_name":"src\\lib.rs","byte_start":2105,"byte_end":2202,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"! are consider equal only if they have the same starting address *and* length.","span":{"file_name":"src\\lib.rs","byte_start":2203,"byte_end":2283,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":2284,"byte_end":2287,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":2288,"byte_end":2295,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"! # use by_addr::ByAddr;","span":{"file_name":"src\\lib.rs","byte_start":2296,"byte_end":2322,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"! #","span":{"file_name":"src\\lib.rs","byte_start":2323,"byte_end":2328,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"! let v = [1, 2, 3, 4];","span":{"file_name":"src\\lib.rs","byte_start":2329,"byte_end":2354,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":2355,"byte_end":2358,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! assert_eq!(ByAddr(&v[0..4]), ByAddr(&v[0..4])); // Same address and length.","span":{"file_name":"src\\lib.rs","byte_start":2359,"byte_end":2438,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"! assert_ne!(ByAddr(&v[0..4]), ByAddr(&v[0..2])); // Same address, different length.","span":{"file_name":"src\\lib.rs","byte_start":2439,"byte_end":2525,"line_start":63,"line_end":63,"column_start":1,"column_end":87}},{"value":"! ```","span":{"file_name":"src\\lib.rs","byte_start":2526,"byte_end":2533,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"src\\lib.rs","byte_start":2534,"byte_end":2537,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! [`no_std`]: https://doc.rust-lang.org/book/first-edition/using-rust-without-the-standard-library.html","span":{"file_name":"src\\lib.rs","byte_start":2538,"byte_end":2643,"line_start":66,"line_end":66,"column_start":1,"column_end":106}},{"value":"! [`by_address`]: https://docs.rs/by_address/1.0.4/by_address/","span":{"file_name":"src\\lib.rs","byte_start":2644,"byte_end":2708,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"! [ByAddr]: struct.ByAddr.html","span":{"file_name":"src\\lib.rs","byte_start":2709,"byte_end":2741,"line_start":68,"line_end":68,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"src\\lib.rs","byte_start":3117,"byte_end":3127,"line_start":79,"line_end":79,"column_start":11,"column_end":21},"name":"FromTarget","qualname":"::FromTarget","value":"FromTarget<T>: Deref","parent":null,"children":[{"krate":0,"index":7}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"src\\lib.rs","byte_start":3128,"byte_end":3129,"line_start":79,"line_end":79,"column_start":22,"column_end":23},"name":"T","qualname":"::FromTarget::T$21","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"src\\lib.rs","byte_start":3147,"byte_end":3158,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"from_target","qualname":"::FromTarget::from_target","value":"fn (t: T) -> Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"src\\lib.rs","byte_start":3182,"byte_end":3183,"line_start":83,"line_end":83,"column_start":6,"column_end":7},"name":"T","qualname":"::T$32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"src\\lib.rs","byte_start":3185,"byte_end":3186,"line_start":83,"line_end":83,"column_start":9,"column_end":10},"name":"Y","qualname":"::Y$32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":4294967242},"span":{"file_name":"src\\lib.rs","byte_start":3262,"byte_end":3263,"line_start":84,"line_end":84,"column_start":20,"column_end":21},"name":"t","qualname":"<ByAddr<T> as FromTarget>::from_target::t","value":"Y","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"src\\lib.rs","byte_start":3250,"byte_end":3261,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"from_target","qualname":"<ByAddr<T> as FromTarget>::from_target","value":"fn (t: Y) -> ByAddr<T>","parent":{"krate":0,"index":5},"children":[],"decl_id":{"krate":0,"index":7},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"src\\lib.rs","byte_start":3315,"byte_end":3325,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"IntoByAddr","qualname":"::IntoByAddr","value":"IntoByAddr<T>: Into<T>","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"src\\lib.rs","byte_start":3326,"byte_end":3327,"line_start":87,"line_end":87,"column_start":22,"column_end":23},"name":"T","qualname":"::IntoByAddr::T$68","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"src\\lib.rs","byte_start":3362,"byte_end":3373,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"into_byaddr","qualname":"::IntoByAddr::into_byaddr","value":"fn (self) -> ByAddr<T>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"src\\lib.rs","byte_start":3402,"byte_end":3403,"line_start":91,"line_end":91,"column_start":6,"column_end":7},"name":"T","qualname":"::T$86","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"src\\lib.rs","byte_start":3405,"byte_end":3406,"line_start":91,"line_end":91,"column_start":9,"column_end":10},"name":"Y","qualname":"::Y$86","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":4294967184},"span":{"file_name":"src\\lib.rs","byte_start":3486,"byte_end":3490,"line_start":92,"line_end":92,"column_start":20,"column_end":24},"name":"self","qualname":"<Y as IntoByAddr>::into_byaddr::self","value":"Y","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"src\\lib.rs","byte_start":3474,"byte_end":3485,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"into_byaddr","qualname":"<Y as IntoByAddr>::into_byaddr","value":"fn (self) -> ByAddr<T>","parent":{"krate":0,"index":12},"children":[],"decl_id":{"krate":0,"index":14},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"src\\lib.rs","byte_start":3206,"byte_end":3212,"line_start":83,"line_end":83,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"src\\lib.rs","byte_start":3426,"byte_end":3427,"line_start":91,"line_end":91,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src\\lib.rs","byte_start":3052,"byte_end":3062,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"ref_id":{"krate":14,"index":0}},{"kind":"Mod","span":{"file_name":"src\\lib.rs","byte_start":3089,"byte_end":3092,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src\\lib.rs","byte_start":3094,"byte_end":3097,"line_start":77,"line_end":77,"column_start":10,"column_end":13},"ref_id":{"krate":2,"index":1965}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3132,"byte_end":3137,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"ref_id":{"krate":2,"index":2073}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3162,"byte_end":3163,"line_start":80,"line_end":80,"column_start":23,"column_end":24},"ref_id":{"krate":0,"index":6}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3206,"byte_end":3212,"line_start":83,"line_end":83,"column_start":30,"column_end":36},"ref_id":{"krate":14,"index":48}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3213,"byte_end":3214,"line_start":83,"line_end":83,"column_start":37,"column_end":38},"ref_id":{"krate":0,"index":9}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3188,"byte_end":3198,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"ref_id":{"krate":0,"index":5}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3199,"byte_end":3200,"line_start":83,"line_end":83,"column_start":23,"column_end":24},"ref_id":{"krate":0,"index":10}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3225,"byte_end":3229,"line_start":83,"line_end":83,"column_start":49,"column_end":53},"ref_id":{"krate":2,"index":1825}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3230,"byte_end":3231,"line_start":83,"line_end":83,"column_start":54,"column_end":55},"ref_id":{"krate":0,"index":10}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3235,"byte_end":3240,"line_start":83,"line_end":83,"column_start":59,"column_end":64},"ref_id":{"krate":2,"index":2073}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3222,"byte_end":3223,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"ref_id":{"krate":0,"index":9}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3265,"byte_end":3266,"line_start":84,"line_end":84,"column_start":23,"column_end":24},"ref_id":{"krate":0,"index":10}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3271,"byte_end":3277,"line_start":84,"line_end":84,"column_start":29,"column_end":35},"ref_id":{"krate":14,"index":48}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3278,"byte_end":3279,"line_start":84,"line_end":84,"column_start":36,"column_end":37},"ref_id":{"krate":0,"index":9}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3283,"byte_end":3289,"line_start":84,"line_end":84,"column_start":41,"column_end":47},"ref_id":{"krate":14,"index":48}},{"kind":"Function","span":{"file_name":"src\\lib.rs","byte_start":3292,"byte_end":3296,"line_start":84,"line_end":84,"column_start":50,"column_end":54},"ref_id":{"krate":2,"index":1824}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":3290,"byte_end":3291,"line_start":84,"line_end":84,"column_start":48,"column_end":49},"ref_id":{"krate":0,"index":4294967242}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3330,"byte_end":3334,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"ref_id":{"krate":2,"index":1822}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3347,"byte_end":3352,"line_start":87,"line_end":87,"column_start":43,"column_end":48},"ref_id":{"krate":2,"index":2073}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3344,"byte_end":3345,"line_start":87,"line_end":87,"column_start":40,"column_end":41},"ref_id":{"krate":0,"index":13}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3383,"byte_end":3389,"line_start":88,"line_end":88,"column_start":29,"column_end":35},"ref_id":{"krate":14,"index":48}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3390,"byte_end":3391,"line_start":88,"line_end":88,"column_start":36,"column_end":37},"ref_id":{"krate":0,"index":13}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3426,"byte_end":3427,"line_start":91,"line_end":91,"column_start":30,"column_end":31},"ref_id":{"krate":0,"index":17}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3408,"byte_end":3418,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"ref_id":{"krate":0,"index":12}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3419,"byte_end":3420,"line_start":91,"line_end":91,"column_start":23,"column_end":24},"ref_id":{"krate":0,"index":16}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3437,"byte_end":3441,"line_start":91,"line_end":91,"column_start":41,"column_end":45},"ref_id":{"krate":2,"index":1822}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3442,"byte_end":3443,"line_start":91,"line_end":91,"column_start":46,"column_end":47},"ref_id":{"krate":0,"index":16}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3434,"byte_end":3435,"line_start":91,"line_end":91,"column_start":38,"column_end":39},"ref_id":{"krate":0,"index":17}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3449,"byte_end":3454,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"ref_id":{"krate":2,"index":2073}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3457,"byte_end":3461,"line_start":91,"line_end":91,"column_start":61,"column_end":65},"ref_id":{"krate":2,"index":1825}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3462,"byte_end":3463,"line_start":91,"line_end":91,"column_start":66,"column_end":67},"ref_id":{"krate":0,"index":17}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3446,"byte_end":3447,"line_start":91,"line_end":91,"column_start":50,"column_end":51},"ref_id":{"krate":0,"index":16}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3495,"byte_end":3501,"line_start":92,"line_end":92,"column_start":29,"column_end":35},"ref_id":{"krate":14,"index":48}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3502,"byte_end":3503,"line_start":92,"line_end":92,"column_start":36,"column_end":37},"ref_id":{"krate":0,"index":16}},{"kind":"Function","span":{"file_name":"src\\lib.rs","byte_start":3515,"byte_end":3526,"line_start":92,"line_end":92,"column_start":49,"column_end":60},"ref_id":{"krate":0,"index":7}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":3507,"byte_end":3513,"line_start":92,"line_end":92,"column_start":41,"column_end":47},"ref_id":{"krate":14,"index":48}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":3527,"byte_end":3531,"line_start":92,"line_end":92,"column_start":61,"column_end":65},"ref_id":{"krate":0,"index":4294967184}}],"macro_refs":[],"relations":[{"span":{"file_name":"src\\lib.rs","byte_start":3132,"byte_end":3137,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2073},"to":{"krate":0,"index":5}},{"span":{"file_name":"src\\lib.rs","byte_start":3206,"byte_end":3212,"line_start":83,"line_end":83,"column_start":30,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":14,"index":48},"to":{"krate":0,"index":5}},{"span":{"file_name":"src\\lib.rs","byte_start":3330,"byte_end":3334,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1822},"to":{"krate":0,"index":12}},{"span":{"file_name":"src\\lib.rs","byte_start":3426,"byte_end":3427,"line_start":91,"line_end":91,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":12}}]}